"use strict";
var base64 = require('./base64');
function base64urlencode(data) {
    if (!data) {
        return data;
    }
    var enc = base64.base64encode(data);
    return enc.replace(/=/g, '').replace(/\+/g, '-').replace(/\//g, '_');
}
function isNonEmptyJson(property) {
    if (!isJson(property)) {
        return false;
    }
    for (var key in property) {
        if (property.hasOwnProperty(key)) {
            return true;
        }
    }
    return false;
}
exports.isNonEmptyJson = isNonEmptyJson;
function isJson(property) {
    return (typeof property !== 'undefined' && property !== null &&
        (property.constructor === {}.constructor || property.constructor === [].constructor));
}
exports.isJson = isJson;
function payloadBuilder(base64Encode) {
    var dict = {};
    var add = function (key, value) {
        if (value != null && value !== '') {
            dict[key] = value;
        }
    };
    var addDict = function (dict) {
        for (var key in dict) {
            if (dict.hasOwnProperty(key)) {
                add(key, dict[key]);
            }
        }
    };
    var addJson = function (keyIfEncoded, keyIfNotEncoded, json) {
        if (isNonEmptyJson(json)) {
            var str = JSON.stringify(json);
            if (base64Encode) {
                add(keyIfEncoded, base64urlencode(str));
            }
            else {
                add(keyIfNotEncoded, str);
            }
        }
    };
    return {
        add: add,
        addDict: addDict,
        addJson: addJson,
        build: function () {
            return dict;
        }
    };
}
exports.payloadBuilder = payloadBuilder;
//# sourceMappingURL=payload.js.map